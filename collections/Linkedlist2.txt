package linkedList;

import java.util.HashSet;

public class Linked_list 
{
	 public int data;
	    public Linked_list next;
	    
	    public Linked_list(int data) {
	        this.data = data;
	    }
}
class LinkedList {
    public Linked_list head;
    
    public void append(int data) {
        if (head == null) {
            head = new Linked_list(data);
            return;
        }
        
        Linked_list current = head;
        while (current.next != null) {
            current = current.next;
        }
        current.next = new Linked_list(data);
    }
    
    public static LinkedList findCommonElements(LinkedList listOne, LinkedList listTwo) {
        HashSet<Integer> set = new HashSet<Integer>();
        LinkedList result = new LinkedList();
        
        Linked_list current = listOne.head;
        while (current != null) {
            set.add(current.data);
            current = current.next;
        }
        
        current = listTwo.head;
        while (current != null) {
            if (set.contains(current.data)) {
                result.append(current.data);
            }
            current = current.next;
        }
        
        return result;
    }
}

package linkedList;

public class Tester {

	public static void main(String[] args) 
	{
		LinkedList listOne = new LinkedList();
        listOne.append(10);
        listOne.append(12);
        listOne.append(21);
        listOne.append(1);
        listOne.append(53);
        
        LinkedList listTwo = new LinkedList();
        listTwo.append(11);
        listTwo.append(21);
        listTwo.append(25);
        listTwo.append(53);
        listTwo.append(47);
        
        LinkedList result = LinkedList.findCommonElements(listOne, listTwo);
        Linked_list current = result.head;
        while (current != null) {
            System.out.print(current.data + "->");
            current = current.next;
        }
        System.out.println("null");
        
        // Test case 2
        listOne = new LinkedList();
        listOne.append(51);
        listOne.append(45);
        listOne.append(63);
        listOne.append(15);
        listOne.append(82);
        
        listTwo = new LinkedList();
        listTwo.append(19);
        listTwo.append(63);
        listTwo.append(51);
        listTwo.append(87);
        listTwo.append(82);
        
        result = LinkedList.findCommonElements(listOne, listTwo);
        current = result.head;
        while (current != null) {
            System.out.print(current.data + "->");
            current = current.next;
        }
        System.out.println("");
		

	}

}